Инструктион:
1) поместите папку ассемблера в папку с проектом Quartus II
2) создайте txt файл и запишите в него команды из списка
3) в командной строке напишите "assemble.py <имя_файла>"
4) в папке с проектом появится файл <имя_файла>.txt


//data input codes len=1 format=command
____________________________________
		opc S3210 MP RL A w adrv3210
____________________________________
DI		000  0000 00 00 1 0 000 0001

/////SHIFT codes len=1
//format = command
____________________________________
		opc S3210 MP RL A w adrv3210
____________________________________
ShL		000  0000 00 00 0 0 000 0010
SL1		000  0000 00 01 0 0 000 0010
ShR		000  0000 00 00 0 0 000 0100
SR1		000  0000 00 10 0 0 000 0100

/////MEM2Rg codes len 2
//format = command read_address
____________________________________
		opc S3210 MP RL A w adrv3210
____________________________________
RgA		000  0000 00 00 0 0     0001
RgB		000  0000 00 00 0 0     0110
Rg2		000  0000 00 00 0 0     0111

/////ALU2MEM code len=2
//format = command write_address
____________________________________
logic	opc S3210 MP RL A w adrv3210
____________________________________
zero	000  1100 00 00 0 1     0000
lA		000  0000 00 00 0 1     0000
lB		000  0101 00 00 0 1     0000
lnA		000  1111 00 00 0 1     0000
lnB		000  1010 00 00 0 1     0000
OR		000  0001 00 00 0 1     0000
ORNO	000  0010 00 00 0 1     0000
NOOR	000  0111 00 00 0 1     0000
NOR		000  1110 00 00 0 1     0000
AND		000  0100 00 00 0 1     0000
ANDNO	000  1000 00 00 0 1     0000
NOAND	000  1101 00 00 0 1     0000
NAND	000  1011 00 00 0 1     0000
XOR		000  1001 00 00 0 1     0000
XORNO	000  0110 00 00 0 1     0000
____________________________________
ariph	opc S3210 MP RL A w adrv3210
____________________________________
A1		000  0000 11 00 0 1     0000
Am1		000  1111 10 00 0 1     0000
ApB		000  1001 10 00 0 1     0000
AmB		000  0110 11 00 0 1     0000
AmBm1	000  0110 10 00 0 1     0000
OR1		000  0001 11 00 0 1     0000
ORNO1	000  0010 11 00 0 1     0000
ANDNOm1	000  0111 10 00 0 1     0000
NANDm1	000  1011 10 00 0 1     0000
ANpA	000  0100 10 00 0 1     0000
ANpA1	000  0100 11 00 0 1     0000
ANDpA	000  1000 10 00 0 1     0000
ANDpA1	000  1000 11 00 0 1     0000
ApOR	000  1101 10 00 0 1     0000
ApOR	000  1101 11 00 0 1     0000
ApON	000  1110 10 00 0 1     0000
ApON1	000  1110 11 00 0 1     0000
ANpOR	000  0101 10 00 0 1     0000
ANpOR1	000  0101 11 00 0 1     0000
ANDpON	000  1010 10 00 0 1     0000
ANDpON1	000  1010 11 00 0 1     0000

/////IF codes 
// инструкции сравнения с загрузкой данных в регистры
//format = command src1(reg/int) src2(reg) address
// инструкции сравнения данных уже лежащих в регистре
//format = r command address
		opc address__________
bne		001 
bgt		010
blt		011
beq		100
bge		101
ble		110
jump	111

result of if code:
DI/lA
lB
A-B
comparison instruction

result of r if code:
A-B
comparison instruction
